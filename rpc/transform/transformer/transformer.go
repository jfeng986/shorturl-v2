// Code generated by goctl. DO NOT EDIT.
// Source: transform.proto

package transformer

import (
	"context"

	"shorturl-v2/rpc/transform/transform"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ExpandRequest   = transform.ExpandRequest
	ExpandResponse  = transform.ExpandResponse
	ShortenRequest  = transform.ShortenRequest
	ShortenResponse = transform.ShortenResponse

	Transformer interface {
		Shorten(ctx context.Context, in *ShortenRequest, opts ...grpc.CallOption) (*ShortenResponse, error)
		Expand(ctx context.Context, in *ExpandRequest, opts ...grpc.CallOption) (*ExpandResponse, error)
	}

	defaultTransformer struct {
		cli zrpc.Client
	}
)

func NewTransformer(cli zrpc.Client) Transformer {
	return &defaultTransformer{
		cli: cli,
	}
}

func (m *defaultTransformer) Shorten(ctx context.Context, in *ShortenRequest, opts ...grpc.CallOption) (*ShortenResponse, error) {
	client := transform.NewTransformerClient(m.cli.Conn())
	return client.Shorten(ctx, in, opts...)
}

func (m *defaultTransformer) Expand(ctx context.Context, in *ExpandRequest, opts ...grpc.CallOption) (*ExpandResponse, error) {
	client := transform.NewTransformerClient(m.cli.Conn())
	return client.Expand(ctx, in, opts...)
}
